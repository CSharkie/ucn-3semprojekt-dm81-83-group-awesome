//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AwesomeClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Movie MovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Seat[] SeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Ticket[] TicketsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateReserved {
            get {
                return this.DateReservedField;
            }
            set {
                if ((this.DateReservedField.Equals(value) != true)) {
                    this.DateReservedField = value;
                    this.RaisePropertyChanged("DateReserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatCount {
            get {
                return this.SeatCountField;
            }
            set {
                if ((this.SeatCountField.Equals(value) != true)) {
                    this.SeatCountField = value;
                    this.RaisePropertyChanged("SeatCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Seat[] Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taken {
            get {
                return this.TakenField;
            }
            set {
                if ((this.TakenField.Equals(value) != true)) {
                    this.TakenField = value;
                    this.RaisePropertyChanged("Taken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Ticket[] Tickets {
            get {
                return this.TicketsField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketsField, value) != true)) {
                    this.TicketsField = value;
                    this.RaisePropertyChanged("Tickets");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAndTime {
            get {
                return this.DateAndTimeField;
            }
            set {
                if ((this.DateAndTimeField.Equals(value) != true)) {
                    this.DateAndTimeField = value;
                    this.RaisePropertyChanged("DateAndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Col {
            get {
                return this.ColField;
            }
            set {
                if ((this.ColField.Equals(value) != true)) {
                    this.ColField = value;
                    this.RaisePropertyChanged("Col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReservationId {
            get {
                return this.ReservationIdField;
            }
            set {
                if ((this.ReservationIdField.Equals(value) != true)) {
                    this.ReservationIdField = value;
                    this.RaisePropertyChanged("ReservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Usable {
            get {
                return this.UsableField;
            }
            set {
                if ((this.UsableField.Equals(value) != true)) {
                    this.UsableField = value;
                    this.RaisePropertyChanged("Usable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Discount DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DiscountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Reservation ReservationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StandardField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Col {
            get {
                return this.ColField;
            }
            set {
                if ((this.ColField.Equals(value) != true)) {
                    this.ColField = value;
                    this.RaisePropertyChanged("Col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Discount Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountField, value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiscountId {
            get {
                return this.DiscountIdField;
            }
            set {
                if ((this.DiscountIdField.Equals(value) != true)) {
                    this.DiscountIdField = value;
                    this.RaisePropertyChanged("DiscountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Reservation Reservation {
            get {
                return this.ReservationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservationField, value) != true)) {
                    this.ReservationField = value;
                    this.RaisePropertyChanged("Reservation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationId {
            get {
                return this.ReservationIdField;
            }
            set {
                if ((this.ReservationIdField.Equals(value) != true)) {
                    this.ReservationIdField = value;
                    this.RaisePropertyChanged("ReservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Standard {
            get {
                return this.StandardField;
            }
            set {
                if ((this.StandardField.Equals(value) != true)) {
                    this.StandardField = value;
                    this.RaisePropertyChanged("Standard");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AwesomeClient.ServiceReference.Seat[] SeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cols {
            get {
                return this.ColsField;
            }
            set {
                if ((this.ColsField.Equals(value) != true)) {
                    this.ColsField = value;
                    this.RaisePropertyChanged("Cols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AwesomeClient.ServiceReference.Seat[] Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Discount", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Discount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DPercent {
            get {
                return this.DPercentField;
            }
            set {
                if ((this.DPercentField.Equals(value) != true)) {
                    this.DPercentField = value;
                    this.RaisePropertyChanged("DPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        string createReservation(string name, bool taken, System.DateTime dateReserved, int movieId, int[] seats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        System.Threading.Tasks.Task<string> createReservationAsync(string name, bool taken, System.DateTime dateReserved, int movieId, int[] seats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        string createMovie(string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        System.Threading.Tasks.Task<string> createMovieAsync(string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        string createRoom(int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        System.Threading.Tasks.Task<string> createRoomAsync(int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        string createTicket(decimal standard, int reservationId, int discountId, int col, int row);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        System.Threading.Tasks.Task<string> createTicketAsync(decimal standard, int reservationId, int discountId, int col, int row);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createDiscount", ReplyAction="http://tempuri.org/IService/createDiscountResponse")]
        string createDiscount(decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createDiscount", ReplyAction="http://tempuri.org/IService/createDiscountResponse")]
        System.Threading.Tasks.Task<string> createDiscountAsync(decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateReservation", ReplyAction="http://tempuri.org/IService/updateReservationResponse")]
        string updateReservation(int reservationId, string name, bool taken, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateReservation", ReplyAction="http://tempuri.org/IService/updateReservationResponse")]
        System.Threading.Tasks.Task<string> updateReservationAsync(int reservationId, string name, bool taken, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateMovie", ReplyAction="http://tempuri.org/IService/updateMovieResponse")]
        string updateMovie(int movieId, string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateMovie", ReplyAction="http://tempuri.org/IService/updateMovieResponse")]
        System.Threading.Tasks.Task<string> updateMovieAsync(int movieId, string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateRoom", ReplyAction="http://tempuri.org/IService/updateRoomResponse")]
        string updateRoom(int roomId, int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateRoom", ReplyAction="http://tempuri.org/IService/updateRoomResponse")]
        System.Threading.Tasks.Task<string> updateRoomAsync(int roomId, int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateTicket", ReplyAction="http://tempuri.org/IService/updateTicketResponse")]
        string updateTicket(int ticketId, decimal standard, int reservationId, int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateTicket", ReplyAction="http://tempuri.org/IService/updateTicketResponse")]
        System.Threading.Tasks.Task<string> updateTicketAsync(int ticketId, decimal standard, int reservationId, int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateSeat", ReplyAction="http://tempuri.org/IService/updateSeatResponse")]
        string updateSeat(int seatId, int col, int row, bool usable, int roomId, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateSeat", ReplyAction="http://tempuri.org/IService/updateSeatResponse")]
        System.Threading.Tasks.Task<string> updateSeatAsync(int seatId, int col, int row, bool usable, int roomId, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateDiscount", ReplyAction="http://tempuri.org/IService/updateDiscountResponse")]
        string updateDiscount(int discountId, decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateDiscount", ReplyAction="http://tempuri.org/IService/updateDiscountResponse")]
        System.Threading.Tasks.Task<string> updateDiscountAsync(int discountId, decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getReservation", ReplyAction="http://tempuri.org/IService/getReservationResponse")]
        AwesomeClient.ServiceReference.Reservation[] getReservation(int reservationId, string name, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getReservation", ReplyAction="http://tempuri.org/IService/getReservationResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Reservation[]> getReservationAsync(int reservationId, string name, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getMovie", ReplyAction="http://tempuri.org/IService/getMovieResponse")]
        AwesomeClient.ServiceReference.Movie[] getMovie(int movieId, string title, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getMovie", ReplyAction="http://tempuri.org/IService/getMovieResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Movie[]> getMovieAsync(int movieId, string title, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRoom", ReplyAction="http://tempuri.org/IService/getRoomResponse")]
        AwesomeClient.ServiceReference.Room getRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRoom", ReplyAction="http://tempuri.org/IService/getRoomResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room> getRoomAsync(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllRooms", ReplyAction="http://tempuri.org/IService/getAllRoomsResponse")]
        AwesomeClient.ServiceReference.Room[] getAllRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllRooms", ReplyAction="http://tempuri.org/IService/getAllRoomsResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room[]> getAllRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getTicket", ReplyAction="http://tempuri.org/IService/getTicketResponse")]
        AwesomeClient.ServiceReference.Ticket[] getTicket(int ticketId, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getTicket", ReplyAction="http://tempuri.org/IService/getTicketResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Ticket[]> getTicketAsync(int ticketId, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getSeat", ReplyAction="http://tempuri.org/IService/getSeatResponse")]
        AwesomeClient.ServiceReference.Seat[] getSeat(int seatId, int roomId, int col, int row, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getSeat", ReplyAction="http://tempuri.org/IService/getSeatResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getSeatAsync(int seatId, int roomId, int col, int row, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDiscount", ReplyAction="http://tempuri.org/IService/getDiscountResponse")]
        AwesomeClient.ServiceReference.Discount getDiscount(System.Nullable<int> discountId, decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDiscount", ReplyAction="http://tempuri.org/IService/getDiscountResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Discount> getDiscountAsync(System.Nullable<int> discountId, decimal dPercent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeReservation", ReplyAction="http://tempuri.org/IService/removeReservationResponse")]
        string removeReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeReservation", ReplyAction="http://tempuri.org/IService/removeReservationResponse")]
        System.Threading.Tasks.Task<string> removeReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeMovie", ReplyAction="http://tempuri.org/IService/removeMovieResponse")]
        string removeMovie(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeMovie", ReplyAction="http://tempuri.org/IService/removeMovieResponse")]
        System.Threading.Tasks.Task<string> removeMovieAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeRoom", ReplyAction="http://tempuri.org/IService/removeRoomResponse")]
        string removeRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeRoom", ReplyAction="http://tempuri.org/IService/removeRoomResponse")]
        System.Threading.Tasks.Task<string> removeRoomAsync(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeTicket", ReplyAction="http://tempuri.org/IService/removeTicketResponse")]
        string removeTicket(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeTicket", ReplyAction="http://tempuri.org/IService/removeTicketResponse")]
        System.Threading.Tasks.Task<string> removeTicketAsync(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeDiscount", ReplyAction="http://tempuri.org/IService/removeDiscountResponse")]
        string removeDiscount(int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/removeDiscount", ReplyAction="http://tempuri.org/IService/removeDiscountResponse")]
        System.Threading.Tasks.Task<string> removeDiscountAsync(int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatSingleThread", ReplyAction="http://tempuri.org/IService/getAdjSeatSingleThreadResponse")]
        AwesomeClient.ServiceReference.Seat[] getAdjSeatSingleThread(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatSingleThread", ReplyAction="http://tempuri.org/IService/getAdjSeatSingleThreadResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatSingleThreadAsync(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatMultiThread", ReplyAction="http://tempuri.org/IService/getAdjSeatMultiThreadResponse")]
        AwesomeClient.ServiceReference.Seat[] getAdjSeatMultiThread(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatMultiThread", ReplyAction="http://tempuri.org/IService/getAdjSeatMultiThreadResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatMultiThreadAsync(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatParallel", ReplyAction="http://tempuri.org/IService/getAdjSeatParallelResponse")]
        AwesomeClient.ServiceReference.Seat[] getAdjSeatParallel(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatParallel", ReplyAction="http://tempuri.org/IService/getAdjSeatParallelResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatParallelAsync(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatSingleThreadV2", ReplyAction="http://tempuri.org/IService/getAdjSeatSingleThreadV2Response")]
        AwesomeClient.ServiceReference.Seat[] getAdjSeatSingleThreadV2(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatSingleThreadV2", ReplyAction="http://tempuri.org/IService/getAdjSeatSingleThreadV2Response")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatSingleThreadV2Async(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatMultiThreadV2", ReplyAction="http://tempuri.org/IService/getAdjSeatMultiThreadV2Response")]
        AwesomeClient.ServiceReference.Seat[] getAdjSeatMultiThreadV2(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAdjSeatMultiThreadV2", ReplyAction="http://tempuri.org/IService/getAdjSeatMultiThreadV2Response")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatMultiThreadV2Async(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/adj2", ReplyAction="http://tempuri.org/IService/adj2Response")]
        string[] adj2(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/adj2", ReplyAction="http://tempuri.org/IService/adj2Response")]
        System.Threading.Tasks.Task<string[]> adj2Async(int noOfSeats, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/emptyRoom", ReplyAction="http://tempuri.org/IService/emptyRoomResponse")]
        bool emptyRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/emptyRoom", ReplyAction="http://tempuri.org/IService/emptyRoomResponse")]
        System.Threading.Tasks.Task<bool> emptyRoomAsync(int roomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AwesomeClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AwesomeClient.ServiceReference.IService>, AwesomeClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createReservation(string name, bool taken, System.DateTime dateReserved, int movieId, int[] seats) {
            return base.Channel.createReservation(name, taken, dateReserved, movieId, seats);
        }
        
        public System.Threading.Tasks.Task<string> createReservationAsync(string name, bool taken, System.DateTime dateReserved, int movieId, int[] seats) {
            return base.Channel.createReservationAsync(name, taken, dateReserved, movieId, seats);
        }
        
        public string createMovie(string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.createMovie(title, dateAndTime, roomId);
        }
        
        public System.Threading.Tasks.Task<string> createMovieAsync(string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.createMovieAsync(title, dateAndTime, roomId);
        }
        
        public string createRoom(int cols, int rows) {
            return base.Channel.createRoom(cols, rows);
        }
        
        public System.Threading.Tasks.Task<string> createRoomAsync(int cols, int rows) {
            return base.Channel.createRoomAsync(cols, rows);
        }
        
        public string createTicket(decimal standard, int reservationId, int discountId, int col, int row) {
            return base.Channel.createTicket(standard, reservationId, discountId, col, row);
        }
        
        public System.Threading.Tasks.Task<string> createTicketAsync(decimal standard, int reservationId, int discountId, int col, int row) {
            return base.Channel.createTicketAsync(standard, reservationId, discountId, col, row);
        }
        
        public string createDiscount(decimal dPercent) {
            return base.Channel.createDiscount(dPercent);
        }
        
        public System.Threading.Tasks.Task<string> createDiscountAsync(decimal dPercent) {
            return base.Channel.createDiscountAsync(dPercent);
        }
        
        public string updateReservation(int reservationId, string name, bool taken, int movieId, int seatCount) {
            return base.Channel.updateReservation(reservationId, name, taken, movieId, seatCount);
        }
        
        public System.Threading.Tasks.Task<string> updateReservationAsync(int reservationId, string name, bool taken, int movieId, int seatCount) {
            return base.Channel.updateReservationAsync(reservationId, name, taken, movieId, seatCount);
        }
        
        public string updateMovie(int movieId, string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.updateMovie(movieId, title, dateAndTime, roomId);
        }
        
        public System.Threading.Tasks.Task<string> updateMovieAsync(int movieId, string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.updateMovieAsync(movieId, title, dateAndTime, roomId);
        }
        
        public string updateRoom(int roomId, int cols, int rows) {
            return base.Channel.updateRoom(roomId, cols, rows);
        }
        
        public System.Threading.Tasks.Task<string> updateRoomAsync(int roomId, int cols, int rows) {
            return base.Channel.updateRoomAsync(roomId, cols, rows);
        }
        
        public string updateTicket(int ticketId, decimal standard, int reservationId, int discountId) {
            return base.Channel.updateTicket(ticketId, standard, reservationId, discountId);
        }
        
        public System.Threading.Tasks.Task<string> updateTicketAsync(int ticketId, decimal standard, int reservationId, int discountId) {
            return base.Channel.updateTicketAsync(ticketId, standard, reservationId, discountId);
        }
        
        public string updateSeat(int seatId, int col, int row, bool usable, int roomId, int reservationId) {
            return base.Channel.updateSeat(seatId, col, row, usable, roomId, reservationId);
        }
        
        public System.Threading.Tasks.Task<string> updateSeatAsync(int seatId, int col, int row, bool usable, int roomId, int reservationId) {
            return base.Channel.updateSeatAsync(seatId, col, row, usable, roomId, reservationId);
        }
        
        public string updateDiscount(int discountId, decimal dPercent) {
            return base.Channel.updateDiscount(discountId, dPercent);
        }
        
        public System.Threading.Tasks.Task<string> updateDiscountAsync(int discountId, decimal dPercent) {
            return base.Channel.updateDiscountAsync(discountId, dPercent);
        }
        
        public AwesomeClient.ServiceReference.Reservation[] getReservation(int reservationId, string name, int movieId) {
            return base.Channel.getReservation(reservationId, name, movieId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Reservation[]> getReservationAsync(int reservationId, string name, int movieId) {
            return base.Channel.getReservationAsync(reservationId, name, movieId);
        }
        
        public AwesomeClient.ServiceReference.Movie[] getMovie(int movieId, string title, int roomId) {
            return base.Channel.getMovie(movieId, title, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Movie[]> getMovieAsync(int movieId, string title, int roomId) {
            return base.Channel.getMovieAsync(movieId, title, roomId);
        }
        
        public AwesomeClient.ServiceReference.Room getRoom(int roomId) {
            return base.Channel.getRoom(roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room> getRoomAsync(int roomId) {
            return base.Channel.getRoomAsync(roomId);
        }
        
        public AwesomeClient.ServiceReference.Room[] getAllRooms() {
            return base.Channel.getAllRooms();
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room[]> getAllRoomsAsync() {
            return base.Channel.getAllRoomsAsync();
        }
        
        public AwesomeClient.ServiceReference.Ticket[] getTicket(int ticketId, int reservationId) {
            return base.Channel.getTicket(ticketId, reservationId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Ticket[]> getTicketAsync(int ticketId, int reservationId) {
            return base.Channel.getTicketAsync(ticketId, reservationId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getSeat(int seatId, int roomId, int col, int row, int reservationId) {
            return base.Channel.getSeat(seatId, roomId, col, row, reservationId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getSeatAsync(int seatId, int roomId, int col, int row, int reservationId) {
            return base.Channel.getSeatAsync(seatId, roomId, col, row, reservationId);
        }
        
        public AwesomeClient.ServiceReference.Discount getDiscount(System.Nullable<int> discountId, decimal dPercent) {
            return base.Channel.getDiscount(discountId, dPercent);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Discount> getDiscountAsync(System.Nullable<int> discountId, decimal dPercent) {
            return base.Channel.getDiscountAsync(discountId, dPercent);
        }
        
        public string removeReservation(int reservationId) {
            return base.Channel.removeReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<string> removeReservationAsync(int reservationId) {
            return base.Channel.removeReservationAsync(reservationId);
        }
        
        public string removeMovie(int movieId) {
            return base.Channel.removeMovie(movieId);
        }
        
        public System.Threading.Tasks.Task<string> removeMovieAsync(int movieId) {
            return base.Channel.removeMovieAsync(movieId);
        }
        
        public string removeRoom(int roomId) {
            return base.Channel.removeRoom(roomId);
        }
        
        public System.Threading.Tasks.Task<string> removeRoomAsync(int roomId) {
            return base.Channel.removeRoomAsync(roomId);
        }
        
        public string removeTicket(int ticketId) {
            return base.Channel.removeTicket(ticketId);
        }
        
        public System.Threading.Tasks.Task<string> removeTicketAsync(int ticketId) {
            return base.Channel.removeTicketAsync(ticketId);
        }
        
        public string removeDiscount(int discountId) {
            return base.Channel.removeDiscount(discountId);
        }
        
        public System.Threading.Tasks.Task<string> removeDiscountAsync(int discountId) {
            return base.Channel.removeDiscountAsync(discountId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getAdjSeatSingleThread(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatSingleThread(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatSingleThreadAsync(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatSingleThreadAsync(noOfSeats, roomId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getAdjSeatMultiThread(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatMultiThread(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatMultiThreadAsync(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatMultiThreadAsync(noOfSeats, roomId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getAdjSeatParallel(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatParallel(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatParallelAsync(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatParallelAsync(noOfSeats, roomId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getAdjSeatSingleThreadV2(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatSingleThreadV2(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatSingleThreadV2Async(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatSingleThreadV2Async(noOfSeats, roomId);
        }
        
        public AwesomeClient.ServiceReference.Seat[] getAdjSeatMultiThreadV2(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatMultiThreadV2(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Seat[]> getAdjSeatMultiThreadV2Async(int noOfSeats, int roomId) {
            return base.Channel.getAdjSeatMultiThreadV2Async(noOfSeats, roomId);
        }
        
        public string[] adj2(int noOfSeats, int roomId) {
            return base.Channel.adj2(noOfSeats, roomId);
        }
        
        public System.Threading.Tasks.Task<string[]> adj2Async(int noOfSeats, int roomId) {
            return base.Channel.adj2Async(noOfSeats, roomId);
        }
        
        public bool emptyRoom(int roomId) {
            return base.Channel.emptyRoom(roomId);
        }
        
        public System.Threading.Tasks.Task<bool> emptyRoomAsync(int roomId) {
            return base.Channel.emptyRoomAsync(roomId);
        }
    }
}
