//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AwesomeClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TakenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateReserved {
            get {
                return this.DateReservedField;
            }
            set {
                if ((this.DateReservedField.Equals(value) != true)) {
                    this.DateReservedField = value;
                    this.RaisePropertyChanged("DateReserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatCount {
            get {
                return this.SeatCountField;
            }
            set {
                if ((this.SeatCountField.Equals(value) != true)) {
                    this.SeatCountField = value;
                    this.RaisePropertyChanged("SeatCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taken {
            get {
                return this.TakenField;
            }
            set {
                if ((this.TakenField.Equals(value) != true)) {
                    this.TakenField = value;
                    this.RaisePropertyChanged("Taken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/AwesomeService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cols {
            get {
                return this.ColsField;
            }
            set {
                if ((this.ColsField.Equals(value) != true)) {
                    this.ColsField = value;
                    this.RaisePropertyChanged("Cols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        string createReservation(string name, bool taken, System.DateTime dateReserved, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        System.Threading.Tasks.Task<string> createReservationAsync(string name, bool taken, System.DateTime dateReserved, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        string createMovie(string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        System.Threading.Tasks.Task<string> createMovieAsync(string title, System.DateTime dateAndTime, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        string createRoom(int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        System.Threading.Tasks.Task<string> createRoomAsync(int cols, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        string createTicket(decimal standard, int reservationId, int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        System.Threading.Tasks.Task<string> createTicketAsync(decimal standard, int reservationId, int discountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateReservation", ReplyAction="http://tempuri.org/IService/updateReservationResponse")]
        string updateReservation(int reservationId, string name, bool taken, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateReservation", ReplyAction="http://tempuri.org/IService/updateReservationResponse")]
        System.Threading.Tasks.Task<string> updateReservationAsync(int reservationId, string name, bool taken, int movieId, int seatCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getReservation", ReplyAction="http://tempuri.org/IService/getReservationResponse")]
        AwesomeClient.ServiceReference.Reservation getReservation(int reservationId, string name, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getReservation", ReplyAction="http://tempuri.org/IService/getReservationResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Reservation> getReservationAsync(int reservationId, string name, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRoom", ReplyAction="http://tempuri.org/IService/getRoomResponse")]
        AwesomeClient.ServiceReference.Room getRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRoom", ReplyAction="http://tempuri.org/IService/getRoomResponse")]
        System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room> getRoomAsync(int roomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AwesomeClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AwesomeClient.ServiceReference.IService>, AwesomeClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createReservation(string name, bool taken, System.DateTime dateReserved, int movieId, int seatCount) {
            return base.Channel.createReservation(name, taken, dateReserved, movieId, seatCount);
        }
        
        public System.Threading.Tasks.Task<string> createReservationAsync(string name, bool taken, System.DateTime dateReserved, int movieId, int seatCount) {
            return base.Channel.createReservationAsync(name, taken, dateReserved, movieId, seatCount);
        }
        
        public string createMovie(string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.createMovie(title, dateAndTime, roomId);
        }
        
        public System.Threading.Tasks.Task<string> createMovieAsync(string title, System.DateTime dateAndTime, int roomId) {
            return base.Channel.createMovieAsync(title, dateAndTime, roomId);
        }
        
        public string createRoom(int cols, int rows) {
            return base.Channel.createRoom(cols, rows);
        }
        
        public System.Threading.Tasks.Task<string> createRoomAsync(int cols, int rows) {
            return base.Channel.createRoomAsync(cols, rows);
        }
        
        public string createTicket(decimal standard, int reservationId, int discountId) {
            return base.Channel.createTicket(standard, reservationId, discountId);
        }
        
        public System.Threading.Tasks.Task<string> createTicketAsync(decimal standard, int reservationId, int discountId) {
            return base.Channel.createTicketAsync(standard, reservationId, discountId);
        }
        
        public string updateReservation(int reservationId, string name, bool taken, int movieId, int seatCount) {
            return base.Channel.updateReservation(reservationId, name, taken, movieId, seatCount);
        }
        
        public System.Threading.Tasks.Task<string> updateReservationAsync(int reservationId, string name, bool taken, int movieId, int seatCount) {
            return base.Channel.updateReservationAsync(reservationId, name, taken, movieId, seatCount);
        }
        
        public AwesomeClient.ServiceReference.Reservation getReservation(int reservationId, string name, int movieId) {
            return base.Channel.getReservation(reservationId, name, movieId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Reservation> getReservationAsync(int reservationId, string name, int movieId) {
            return base.Channel.getReservationAsync(reservationId, name, movieId);
        }
        
        public AwesomeClient.ServiceReference.Room getRoom(int roomId) {
            return base.Channel.getRoom(roomId);
        }
        
        public System.Threading.Tasks.Task<AwesomeClient.ServiceReference.Room> getRoomAsync(int roomId) {
            return base.Channel.getRoomAsync(roomId);
        }
    }
}
