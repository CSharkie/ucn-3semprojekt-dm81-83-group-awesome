//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AwesomeClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        string createReservation(AwesomeServer.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createReservation", ReplyAction="http://tempuri.org/IService/createReservationResponse")]
        System.Threading.Tasks.Task<string> createReservationAsync(AwesomeServer.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        string createMovie(AwesomeServer.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createMovie", ReplyAction="http://tempuri.org/IService/createMovieResponse")]
        System.Threading.Tasks.Task<string> createMovieAsync(AwesomeServer.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        string createRoom(AwesomeServer.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createRoom", ReplyAction="http://tempuri.org/IService/createRoomResponse")]
        System.Threading.Tasks.Task<string> createRoomAsync(AwesomeServer.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        string createTicket(AwesomeServer.Ticket ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createTicket", ReplyAction="http://tempuri.org/IService/createTicketResponse")]
        System.Threading.Tasks.Task<string> createTicketAsync(AwesomeServer.Ticket ticket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AwesomeClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AwesomeClient.ServiceReference.IService>, AwesomeClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createReservation(AwesomeServer.Reservation reservation) {
            return base.Channel.createReservation(reservation);
        }
        
        public System.Threading.Tasks.Task<string> createReservationAsync(AwesomeServer.Reservation reservation) {
            return base.Channel.createReservationAsync(reservation);
        }
        
        public string createMovie(AwesomeServer.Movie movie) {
            return base.Channel.createMovie(movie);
        }
        
        public System.Threading.Tasks.Task<string> createMovieAsync(AwesomeServer.Movie movie) {
            return base.Channel.createMovieAsync(movie);
        }
        
        public string createRoom(AwesomeServer.Room room) {
            return base.Channel.createRoom(room);
        }
        
        public System.Threading.Tasks.Task<string> createRoomAsync(AwesomeServer.Room room) {
            return base.Channel.createRoomAsync(room);
        }
        
        public string createTicket(AwesomeServer.Ticket ticket) {
            return base.Channel.createTicket(ticket);
        }
        
        public System.Threading.Tasks.Task<string> createTicketAsync(AwesomeServer.Ticket ticket) {
            return base.Channel.createTicketAsync(ticket);
        }
    }
}
